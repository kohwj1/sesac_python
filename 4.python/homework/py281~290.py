#281
class 차:
    def __init__(self,바퀴,가격):
        self.바퀴 = 바퀴
        self.가격 = 가격

    #286
    def 정보(self):
        print(f'바퀴수 {self.바퀴}')
        print(f'가격 {self.가격}')
    
#282, 283
class 자전차(차):
    def __init__(self,바퀴,가격,구동계):
        #284
        super().__init__(바퀴,가격)
        self.구동계 = 구동계

    #287
    def 정보(self):
        super().정보()
        print(f'구동계 {self.구동계}')


car = 차(2, 1000)
bicycle = 자전차(2,100,'시마노')

#285
class 자동차(차):
    def __init__(self,바퀴,가격):
        super().__init__(바퀴,가격)

    def 정보(self):
        print(f'바퀴수 {self.바퀴}')
        print(f'가격 {self.가격}')

#288
# 하위 클래스에서 정의한 함수가 부모 클래스의 함수를 덮어쓰기하므로 "부모호출"을 수행하는 부모 클래스의 def 호출()이 무시되고 자식 클래스의 def 호출()만 실행
# (메소드 오버라이딩)
# 파이썬은 메서드를 호출할 때, 현재 인스턴스의 클래스부터 메서드를 탐색합니다.
# 자식 클래스에서 먼저 메서드를 찾기 때문에 부모 클래스의 메서드는 호출되지 않습니다.
# 부모 클래스의 메서드를 호출하려면 super()를 사용하거나 자식 클래스 내에서 부모 클래스 이름을 직접 호출해야 함

#289
# 288번과 같은 이유로 자식 클래스의 def __init__ 만 동작, "자식생성" 만 출력됨

#290
# 자식 클래스의 __init__에서 먼저 "자식생성" 라인을 실행하여 출력된 후, 부모 클래스의 __init__을 읽어와서 "부모생성" 출력 라인이 이어서 실행됨
# 자식생성
# 부모생성